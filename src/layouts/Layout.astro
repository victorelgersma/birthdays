---
import '../styles/global.css'

interface Props {
  title: string
}

const { title } = Astro.props

// Menu items
const menuItems = [
  { title: 'Home', url: '/' },
  { title: 'Backup & Restore', url: '/backup' },
]
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
  </head>
  <body class="min-h-screen bg-gray-50">
    <!-- Drawer Backdrop -->
    <div
      id="drawerBackdrop"
      class="fixed inset-0 bg-gray-900/30 backdrop-blur-sm z-20 hidden transition-all"
    >
    </div>

    <!-- Drawer -->
    <div
      id="drawer"
      class="fixed inset-y-0 left-0 w-64 bg-white shadow-lg transform -translate-x-full transition-transform duration-300 ease-in-out z-30"
    >
      <div class="p-5">
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-xl font-bold text-blue-600">Menu</h2>
          <button id="closeDrawer" class="p-1 rounded-full hover:bg-gray-100">
            <svg
              class="w-6 h-6 text-gray-600"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <nav>
          <ul class="space-y-3">
            {
              menuItems.map((item) => (
                <li>
                  <a
                    href={item.url}
                    class="block py-2 px-4 rounded hover:bg-blue-50 text-gray-700 hover:text-blue-600 transition-colors"
                  >
                    {item.title}
                  </a>
                </li>
              ))
            }
          </ul>
        </nav>
      </div>
    </div>

    <!-- Header with hamburger menu -->
    <header class="bg-white shadow-sm">
      <div
        class="container mx-auto px-4 py-3 flex justify-between items-center"
      >
        <button id="openDrawer" class="p-1 rounded-full hover:bg-gray-100">
          <svg
            class="w-6 h-6 text-gray-600"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
        <div class="font-medium text-lg text-blue-600">{title}</div>
        <div class="w-6"></div>
        <!-- Placeholder for balance -->
      </div>
    </header>

    <!-- Main content -->
    <div class="pt-4">
      <slot />
    </div>

    <script>
      // Drawer functionality
      const drawer = document.getElementById('drawer')
      const drawerBackdrop = document.getElementById('drawerBackdrop')
      const openDrawerBtn = document.getElementById('openDrawer')
      const closeDrawerBtn = document.getElementById('closeDrawer')

      // Open drawer
      openDrawerBtn.addEventListener('click', () => {
        drawer.classList.remove('-translate-x-full')
        drawerBackdrop.classList.remove('hidden')
        document.body.classList.add('overflow-hidden')
      })

      // Close drawer function
      function closeDrawer() {
        drawer.classList.add('-translate-x-full')
        drawerBackdrop.classList.add('hidden')
        document.body.classList.remove('overflow-hidden')
      }

      // Close drawer with button
      closeDrawerBtn.addEventListener('click', closeDrawer)

      // Close drawer when clicking outside
      drawerBackdrop.addEventListener('click', closeDrawer)
    </script>
  </body>
</html>
